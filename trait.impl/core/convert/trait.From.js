(function() {var implementors = {
"embassy_sync":[["impl&lt;'ch, M, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"embassy_sync/channel/struct.Sender.html\" title=\"struct embassy_sync::channel::Sender\">Sender</a>&lt;'ch, M, T, N&gt;&gt; for <a class=\"struct\" href=\"embassy_sync/channel/struct.DynamicSender.html\" title=\"struct embassy_sync::channel::DynamicSender\">DynamicSender</a>&lt;'ch, T&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"embassy_sync/blocking_mutex/raw/trait.RawMutex.html\" title=\"trait embassy_sync::blocking_mutex::raw::RawMutex\">RawMutex</a>,</span>"],["impl&lt;'ch, M, T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"embassy_sync/channel/struct.Receiver.html\" title=\"struct embassy_sync::channel::Receiver\">Receiver</a>&lt;'ch, M, T, N&gt;&gt; for <a class=\"struct\" href=\"embassy_sync/channel/struct.DynamicReceiver.html\" title=\"struct embassy_sync::channel::DynamicReceiver\">DynamicReceiver</a>&lt;'ch, T&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"embassy_sync/blocking_mutex/raw/trait.RawMutex.html\" title=\"trait embassy_sync::blocking_mutex::raw::RawMutex\">RawMutex</a>,</span>"]],
"embassy_time":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"embassy_time/struct.Duration.html\" title=\"struct embassy_time::Duration\">Duration</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()